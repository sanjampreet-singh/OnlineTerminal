{"version":3,"sources":["App.js","index.js"],"names":["App","a","protocol","window","location","socketURL","hostname","port","term","Terminal","applyAddon","attach","fit","open","this","termElm","fetch","cols","rows","method","res","text","processId","socket","WebSocket","onopen","_initialized","addEventListener","resize","clear","className","style","width","height","ref","Component","ReactDOM","render","document","getElementById"],"mappings":"qUA+DeA,E,8MAvDb,sCAAAC,EAAA,6DACQC,EAAwC,WAA7BC,OAAOC,SAASF,SAAwB,SAAW,QAChEG,EACFH,EACAC,OAAOC,SAASE,UACfH,OAAOC,SAASG,KAAO,IAAMJ,OAAOC,SAASG,KAAO,IACrD,cAEIC,EAAO,IAAIC,WACjBA,WAASC,WAAWC,GACpBF,WAASC,WAAWE,GAEpBJ,EAAKK,KAAKC,KAAKC,SACfP,EAAKI,IAAIE,KAAKC,SAbhB,SAekBC,MACd,mBAAqBR,EAAKS,KAAO,SAAWT,EAAKU,KACjD,CAAEC,OAAQ,SAjBd,cAeMC,EAfN,iBAoBwBA,EAAIC,OApB5B,QAoBMC,EApBN,OAuBEjB,GAAaiB,GACPC,EAAS,IAAIC,UAAUnB,IAEtBoB,OAAS,WACdjB,EAAKG,OAAOY,GACZf,EAAKkB,cAAe,GAEtBZ,KAAKN,KAAOA,EACZL,OAAOwB,iBAAiB,SAAxB,sBAAkC,sBAAA1B,EAAA,6DAChCO,EAAKoB,OAAOpB,EAAKS,KAAMT,EAAKU,MAC5BV,EAAKqB,QACLrB,EAAKI,IAAIE,KAAKC,SAHkB,SAK1BC,MAAM,mBAAqBR,EAAKS,KAAO,SAAWT,EAAKU,KAAM,CACjEC,OAAQ,SANsB,OAShCL,KAAKN,KAAOA,EAToB,iDA/BpC,iD,0EA4CA,WAAU,IAAD,OACP,OACE,yBAAKsB,UAAU,OACb,yBAAKC,MAAO,CAACC,MAAM,OAAQC,OAAO,SAChC,yBAAKC,IAAK,SAACA,GAAD,OAAU,EAAKnB,QAAUmB,W,GAjD3BC,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.11d28b15.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"xterm/dist/xterm.css\";\nimport { Terminal } from \"xterm\";\nimport * as attach from \"xterm/lib/addons/attach/attach\";\nimport * as fit from \"xterm/lib/addons/fit/fit\";\n\nclass App extends Component {\n  async componentDidMount() {\n    const protocol = window.location.protocol === \"https:\" ? \"wss://\" : \"ws://\";\n    let socketURL =\n      protocol +\n      window.location.hostname +\n      (window.location.port ? \":\" + window.location.port : \"\") +\n      \"/terminals/\";\n      \n    const term = new Terminal();\n    Terminal.applyAddon(attach);\n    Terminal.applyAddon(fit);\n\n    term.open(this.termElm);\n    term.fit(this.termElm);\n\n    let res = await fetch(\n      \"/terminals?cols=\" + term.cols + \"&rows=\" + term.rows,\n      { method: \"POST\" }\n    );\n\n    let processId = await res.text();\n\n    // const pid = processId;\n    socketURL += processId;\n    const socket = new WebSocket(socketURL);\n\n    socket.onopen = () => {\n      term.attach(socket);\n      term._initialized = true;\n    };\n    this.term = term;\n    window.addEventListener(\"resize\", async function () {\n      term.resize(term.cols, term.rows);\n      term.clear();\n      term.fit(this.termElm);\n\n      await fetch(\"/terminals?cols=\" + term.cols + \"&rows=\" + term.rows, {\n        method: \"POST\",\n      });\n\n      this.term = term;\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div style={{width:\"100%\", height:\"100%\"}}>\n          <div ref={(ref) => (this.termElm = ref)}></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}